{
  "version": 3,
  "sources": ["../../@mui/x-charts/BarChart/BarChart.js", "../../@mui/x-charts/BarChart/BarPlot.js", "../../@mui/x-charts/BarChart/BarElement.js", "../../@mui/x-charts/BarChart/BarClipPath.js", "../../@mui/x-charts/BarChart/getRadius.js", "../../@mui/x-charts/BarChart/BarLabel/BarLabelPlot.js", "../../@mui/x-charts/BarChart/BarLabel/BarLabelItem.js", "../../@mui/x-charts/BarChart/BarLabel/barLabelClasses.js", "../../@mui/x-charts/BarChart/BarLabel/getBarLabel.js", "../../@mui/x-charts/BarChart/BarLabel/BarLabel.js", "../../@mui/x-charts/BarChart/checkScaleErrors.js", "../../@mui/x-charts/BarChart/useBarChartProps.js"],
  "sourcesContent": ["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useThemeProps } from '@mui/material/styles';\r\nimport { BarPlot } from './BarPlot';\r\nimport { ResponsiveChartContainer } from '../ResponsiveChartContainer';\r\nimport { ChartsAxis } from '../ChartsAxis';\r\nimport { ChartsTooltip } from '../ChartsTooltip';\r\nimport { ChartsLegend } from '../ChartsLegend';\r\nimport { ChartsAxisHighlight } from '../ChartsAxisHighlight';\r\nimport { ChartsClipPath } from '../ChartsClipPath';\r\nimport { ChartsGrid } from '../ChartsGrid';\r\nimport { ChartsOnAxisClickHandler } from '../ChartsOnAxisClickHandler';\r\nimport { ChartsOverlay } from '../ChartsOverlay/ChartsOverlay';\r\nimport { useBarChartProps } from './useBarChartProps';\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\n/**\r\n * Demos:\r\n *\r\n * - [Bars](https://mui.com/x/react-charts/bars/)\r\n * - [Bar demonstration](https://mui.com/x/react-charts/bar-demo/)\r\n * - [Stacking](https://mui.com/x/react-charts/stacking/)\r\n *\r\n * API:\r\n *\r\n * - [BarChart API](https://mui.com/x/api/charts/bar-chart/)\r\n */\r\nconst BarChart = /*#__PURE__*/React.forwardRef(function BarChart(inProps, ref) {\r\n  const props = useThemeProps({\r\n    props: inProps,\r\n    name: 'MuiBarChart'\r\n  });\r\n  const {\r\n    chartContainerProps,\r\n    barPlotProps,\r\n    axisClickHandlerProps,\r\n    gridProps,\r\n    clipPathProps,\r\n    clipPathGroupProps,\r\n    overlayProps,\r\n    chartsAxisProps,\r\n    axisHighlightProps,\r\n    legendProps,\r\n    tooltipProps,\r\n    children\r\n  } = useBarChartProps(props);\r\n  return /*#__PURE__*/_jsxs(ResponsiveChartContainer, _extends({\r\n    ref: ref\r\n  }, chartContainerProps, {\r\n    children: [props.onAxisClick && /*#__PURE__*/_jsx(ChartsOnAxisClickHandler, _extends({}, axisClickHandlerProps)), props.grid && /*#__PURE__*/_jsx(ChartsGrid, _extends({}, gridProps)), /*#__PURE__*/_jsxs(\"g\", _extends({}, clipPathGroupProps, {\r\n      children: [/*#__PURE__*/_jsx(BarPlot, _extends({}, barPlotProps)), /*#__PURE__*/_jsx(ChartsOverlay, _extends({}, overlayProps)), /*#__PURE__*/_jsx(ChartsAxisHighlight, _extends({}, axisHighlightProps))]\r\n    })), /*#__PURE__*/_jsx(ChartsAxis, _extends({}, chartsAxisProps)), /*#__PURE__*/_jsx(ChartsLegend, _extends({}, legendProps)), !props.loading && /*#__PURE__*/_jsx(ChartsTooltip, _extends({}, tooltipProps)), /*#__PURE__*/_jsx(ChartsClipPath, _extends({}, clipPathProps)), children]\r\n  }));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? BarChart.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\r\n  // ----------------------------------------------------------------------\r\n  /**\r\n   * The configuration of axes highlight.\r\n   * Default is set to 'band' in the bar direction.\r\n   * Depends on `layout` prop.\r\n   * @see See {@link https://mui.com/x/react-charts/tooltip/#highlights highlight docs} for more details.\r\n   */\r\n  axisHighlight: PropTypes.shape({\r\n    x: PropTypes.oneOf(['band', 'line', 'none']),\r\n    y: PropTypes.oneOf(['band', 'line', 'none'])\r\n  }),\r\n  /**\r\n   * If provided, the function will be used to format the label of the bar.\r\n   * It can be set to 'value' to display the current value.\r\n   * @param {BarItem} item The item to format.\r\n   * @param {BarLabelContext} context data about the bar.\r\n   * @returns {string} The formatted label.\r\n   */\r\n  barLabel: PropTypes.oneOfType([PropTypes.oneOf(['value']), PropTypes.func]),\r\n  /**\r\n   * Defines the border radius of the bar element.\r\n   */\r\n  borderRadius: PropTypes.number,\r\n  /**\r\n   * Indicate which axis to display the bottom of the charts.\r\n   * Can be a string (the id of the axis) or an object `ChartsXAxisProps`.\r\n   * @default xAxisIds[0] The id of the first provided axis\r\n   */\r\n  bottomAxis: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n  /**\r\n   * Color palette used to colorize multiple series.\r\n   * @default blueberryTwilightPalette\r\n   */\r\n  colors: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.func]),\r\n  /**\r\n   * An array of objects that can be used to populate series and axes data using their `dataKey` property.\r\n   */\r\n  dataset: PropTypes.arrayOf(PropTypes.object),\r\n  desc: PropTypes.string,\r\n  /**\r\n   * If `true`, the charts will not listen to the mouse move event.\r\n   * It might break interactive features, but will improve performance.\r\n   * @default false\r\n   */\r\n  disableAxisListener: PropTypes.bool,\r\n  /**\r\n   * Option to display a cartesian grid in the background.\r\n   */\r\n  grid: PropTypes.shape({\r\n    horizontal: PropTypes.bool,\r\n    vertical: PropTypes.bool\r\n  }),\r\n  /**\r\n   * The height of the chart in px. If not defined, it takes the height of the parent element.\r\n   */\r\n  height: PropTypes.number,\r\n  /**\r\n   * The item currently highlighted. Turns highlighting into a controlled prop.\r\n   */\r\n  highlightedItem: PropTypes.shape({\r\n    dataIndex: PropTypes.number,\r\n    seriesId: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\r\n  }),\r\n  /**\r\n   * The direction of the bar elements.\r\n   * @default 'vertical'\r\n   */\r\n  layout: PropTypes.oneOf(['horizontal', 'vertical']),\r\n  /**\r\n   * Indicate which axis to display the left of the charts.\r\n   * Can be a string (the id of the axis) or an object `ChartsYAxisProps`.\r\n   * @default yAxisIds[0] The id of the first provided axis\r\n   */\r\n  leftAxis: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\r\n  /**\r\n   * @deprecated Consider using `slotProps.legend` instead.\r\n   */\r\n  legend: PropTypes.shape({\r\n    classes: PropTypes.object,\r\n    direction: PropTypes.oneOf(['column', 'row']),\r\n    hidden: PropTypes.bool,\r\n    position: PropTypes.shape({\r\n      horizontal: PropTypes.oneOf(['left', 'middle', 'right']).isRequired,\r\n      vertical: PropTypes.oneOf(['bottom', 'middle', 'top']).isRequired\r\n    }),\r\n    slotProps: PropTypes.object,\r\n    slots: PropTypes.object\r\n  }),\r\n  /**\r\n   * If `true`, a loading overlay is displayed.\r\n   * @default false\r\n   */\r\n  loading: PropTypes.bool,\r\n  /**\r\n   * The margin between the SVG and the drawing area.\r\n   * It's used for leaving some space for extra information such as the x- and y-axis or legend.\r\n   * Accepts an object with the optional properties: `top`, `bottom`, `left`, and `right`.\r\n   * @default object Depends on the charts type.\r\n   */\r\n  margin: PropTypes.shape({\r\n    bottom: PropTypes.number,\r\n    left: PropTypes.number,\r\n    right: PropTypes.number,\r\n    top: PropTypes.number\r\n  }),\r\n  /**\r\n   * The function called for onClick events.\r\n   * The second argument contains information about all line/bar elements at the current mouse position.\r\n   * @param {MouseEvent} event The mouse event recorded on the `<svg/>` element.\r\n   * @param {null | AxisData} data The data about the clicked axis and items associated with it.\r\n   */\r\n  onAxisClick: PropTypes.func,\r\n  /**\r\n   * The callback fired when the highlighted item changes.\r\n   *\r\n   * @param {HighlightItemData | null} highlightedItem  The newly highlighted item.\r\n   */\r\n  onHighlightChange: PropTypes.func,\r\n  /**\r\n   * Callback fired when a bar item is clicked.\r\n   * @param {React.MouseEvent<SVGElement, MouseEvent>} event The event source of the callback.\r\n   * @param {BarItemIdentifier} barItemIdentifier The bar item identifier.\r\n   */\r\n  onItemClick: PropTypes.func,\r\n  /**\r\n   * Indicate which axis to display the right of the charts.\r\n   * Can be a string (the id of the axis) or an object `ChartsYAxisProps`.\r\n   * @default null\r\n   */\r\n  rightAxis: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\r\n  /**\r\n   * The series to display in the bar chart.\r\n   * An array of [[BarSeriesType]] objects.\r\n   */\r\n  series: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  /**\r\n   * If `true`, animations are skipped.\r\n   * @default false\r\n   */\r\n  skipAnimation: PropTypes.bool,\r\n  /**\r\n   * The props used for each component slot.\r\n   * @default {}\r\n   */\r\n  slotProps: PropTypes.object,\r\n  /**\r\n   * Overridable component slots.\r\n   * @default {}\r\n   */\r\n  slots: PropTypes.object,\r\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\r\n  title: PropTypes.string,\r\n  /**\r\n   * The configuration of the tooltip.\r\n   * @see See {@link https://mui.com/x/react-charts/tooltip/ tooltip docs} for more details.\r\n   */\r\n  tooltip: PropTypes.shape({\r\n    axisContent: PropTypes.elementType,\r\n    classes: PropTypes.object,\r\n    itemContent: PropTypes.elementType,\r\n    slotProps: PropTypes.object,\r\n    slots: PropTypes.object,\r\n    trigger: PropTypes.oneOf(['axis', 'item', 'none'])\r\n  }),\r\n  /**\r\n   * Indicate which axis to display the top of the charts.\r\n   * Can be a string (the id of the axis) or an object `ChartsXAxisProps`.\r\n   * @default null\r\n   */\r\n  topAxis: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\r\n  viewBox: PropTypes.shape({\r\n    height: PropTypes.number,\r\n    width: PropTypes.number,\r\n    x: PropTypes.number,\r\n    y: PropTypes.number\r\n  }),\r\n  /**\r\n   * The width of the chart in px. If not defined, it takes the width of the parent element.\r\n   */\r\n  width: PropTypes.number,\r\n  /**\r\n   * The configuration of the x-axes.\r\n   * If not provided, a default axis config is used.\r\n   * An array of [[AxisConfig]] objects.\r\n   */\r\n  xAxis: PropTypes.arrayOf(PropTypes.shape({\r\n    classes: PropTypes.object,\r\n    colorMap: PropTypes.oneOfType([PropTypes.shape({\r\n      colors: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n      type: PropTypes.oneOf(['ordinal']).isRequired,\r\n      unknownColor: PropTypes.string,\r\n      values: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.number, PropTypes.string]).isRequired)\r\n    }), PropTypes.shape({\r\n      color: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string.isRequired), PropTypes.func]).isRequired,\r\n      max: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.number]),\r\n      min: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.number]),\r\n      type: PropTypes.oneOf(['continuous']).isRequired\r\n    }), PropTypes.shape({\r\n      colors: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n      thresholds: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.number]).isRequired).isRequired,\r\n      type: PropTypes.oneOf(['piecewise']).isRequired\r\n    })]),\r\n    data: PropTypes.array,\r\n    dataKey: PropTypes.string,\r\n    disableLine: PropTypes.bool,\r\n    disableTicks: PropTypes.bool,\r\n    fill: PropTypes.string,\r\n    hideTooltip: PropTypes.bool,\r\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    label: PropTypes.string,\r\n    labelFontSize: PropTypes.number,\r\n    labelStyle: PropTypes.object,\r\n    max: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.number]),\r\n    min: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.number]),\r\n    position: PropTypes.oneOf(['bottom', 'top']),\r\n    reverse: PropTypes.bool,\r\n    scaleType: PropTypes.oneOf(['band', 'linear', 'log', 'point', 'pow', 'sqrt', 'time', 'utc']),\r\n    slotProps: PropTypes.object,\r\n    slots: PropTypes.object,\r\n    stroke: PropTypes.string,\r\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\r\n    tickFontSize: PropTypes.number,\r\n    tickInterval: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.array, PropTypes.func]),\r\n    tickLabelInterval: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.func]),\r\n    tickLabelPlacement: PropTypes.oneOf(['middle', 'tick']),\r\n    tickLabelStyle: PropTypes.object,\r\n    tickMaxStep: PropTypes.number,\r\n    tickMinStep: PropTypes.number,\r\n    tickNumber: PropTypes.number,\r\n    tickPlacement: PropTypes.oneOf(['end', 'extremities', 'middle', 'start']),\r\n    tickSize: PropTypes.number,\r\n    valueFormatter: PropTypes.func\r\n  })),\r\n  /**\r\n   * The configuration of the y-axes.\r\n   * If not provided, a default axis config is used.\r\n   * An array of [[AxisConfig]] objects.\r\n   */\r\n  yAxis: PropTypes.arrayOf(PropTypes.shape({\r\n    classes: PropTypes.object,\r\n    colorMap: PropTypes.oneOfType([PropTypes.shape({\r\n      colors: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n      type: PropTypes.oneOf(['ordinal']).isRequired,\r\n      unknownColor: PropTypes.string,\r\n      values: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.number, PropTypes.string]).isRequired)\r\n    }), PropTypes.shape({\r\n      color: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string.isRequired), PropTypes.func]).isRequired,\r\n      max: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.number]),\r\n      min: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.number]),\r\n      type: PropTypes.oneOf(['continuous']).isRequired\r\n    }), PropTypes.shape({\r\n      colors: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n      thresholds: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.number]).isRequired).isRequired,\r\n      type: PropTypes.oneOf(['piecewise']).isRequired\r\n    })]),\r\n    data: PropTypes.array,\r\n    dataKey: PropTypes.string,\r\n    disableLine: PropTypes.bool,\r\n    disableTicks: PropTypes.bool,\r\n    fill: PropTypes.string,\r\n    hideTooltip: PropTypes.bool,\r\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    label: PropTypes.string,\r\n    labelFontSize: PropTypes.number,\r\n    labelStyle: PropTypes.object,\r\n    max: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.number]),\r\n    min: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.number]),\r\n    position: PropTypes.oneOf(['left', 'right']),\r\n    reverse: PropTypes.bool,\r\n    scaleType: PropTypes.oneOf(['band', 'linear', 'log', 'point', 'pow', 'sqrt', 'time', 'utc']),\r\n    slotProps: PropTypes.object,\r\n    slots: PropTypes.object,\r\n    stroke: PropTypes.string,\r\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\r\n    tickFontSize: PropTypes.number,\r\n    tickInterval: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.array, PropTypes.func]),\r\n    tickLabelInterval: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.func]),\r\n    tickLabelPlacement: PropTypes.oneOf(['middle', 'tick']),\r\n    tickLabelStyle: PropTypes.object,\r\n    tickMaxStep: PropTypes.number,\r\n    tickMinStep: PropTypes.number,\r\n    tickNumber: PropTypes.number,\r\n    tickPlacement: PropTypes.oneOf(['end', 'extremities', 'middle', 'start']),\r\n    tickSize: PropTypes.number,\r\n    valueFormatter: PropTypes.func\r\n  }))\r\n} : void 0;\r\nexport { BarChart };", "import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nconst _excluded = [\"skipAnimation\", \"onItemClick\", \"borderRadius\", \"barLabel\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useTransition } from '@react-spring/web';\r\nimport { useCartesianContext } from '../context/CartesianProvider';\r\nimport { BarElement } from './BarElement';\r\nimport getColor from './getColor';\r\nimport { useChartId } from '../hooks';\r\nimport { BarClipPath } from './BarClipPath';\r\nimport { BarLabelPlot } from './BarLabel/BarLabelPlot';\r\nimport { checkScaleErrors } from './checkScaleErrors';\r\nimport { useBarSeries } from '../hooks/useSeries';\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\n/**\r\n * Solution of the equations\r\n * W = barWidth * N + offset * (N-1)\r\n * offset / (offset + barWidth) = r\r\n * @param bandWidth The width available to place bars.\r\n * @param numberOfGroups The number of bars to place in that space.\r\n * @param gapRatio The ratio of the gap between bars over the bar width.\r\n * @returns The bar width and the offset between bars.\r\n */\r\nfunction getBandSize({\r\n  bandWidth: W,\r\n  numberOfGroups: N,\r\n  gapRatio: r\r\n}) {\r\n  if (r === 0) {\r\n    return {\r\n      barWidth: W / N,\r\n      offset: 0\r\n    };\r\n  }\r\n  const barWidth = W / (N + (N - 1) * r);\r\n  const offset = r * barWidth;\r\n  return {\r\n    barWidth,\r\n    offset\r\n  };\r\n}\r\nconst useAggregatedData = () => {\r\n  const seriesData = useBarSeries() ?? {\r\n    series: {},\r\n    stackingGroups: [],\r\n    seriesOrder: []\r\n  };\r\n  const axisData = useCartesianContext();\r\n  const chartId = useChartId();\r\n  const {\r\n    series,\r\n    stackingGroups\r\n  } = seriesData;\r\n  const {\r\n    xAxis,\r\n    yAxis,\r\n    xAxisIds,\r\n    yAxisIds\r\n  } = axisData;\r\n  const defaultXAxisId = xAxisIds[0];\r\n  const defaultYAxisId = yAxisIds[0];\r\n  const masks = {};\r\n  const data = stackingGroups.flatMap(({\r\n    ids: groupIds\r\n  }, groupIndex) => {\r\n    return groupIds.flatMap(seriesId => {\r\n      const xAxisId = series[seriesId].xAxisId ?? series[seriesId].xAxisKey ?? defaultXAxisId;\r\n      const yAxisId = series[seriesId].yAxisId ?? series[seriesId].yAxisKey ?? defaultYAxisId;\r\n      const xAxisConfig = xAxis[xAxisId];\r\n      const yAxisConfig = yAxis[yAxisId];\r\n      const verticalLayout = series[seriesId].layout === 'vertical';\r\n      checkScaleErrors(verticalLayout, seriesId, xAxisId, xAxis, yAxisId, yAxis);\r\n      const baseScaleConfig = verticalLayout ? xAxisConfig : yAxisConfig;\r\n      const xScale = xAxisConfig.scale;\r\n      const yScale = yAxisConfig.scale;\r\n      const colorGetter = getColor(series[seriesId], xAxis[xAxisId], yAxis[yAxisId]);\r\n      const bandWidth = baseScaleConfig.scale.bandwidth();\r\n      const {\r\n        barWidth,\r\n        offset\r\n      } = getBandSize({\r\n        bandWidth,\r\n        numberOfGroups: stackingGroups.length,\r\n        gapRatio: baseScaleConfig.barGapRatio\r\n      });\r\n      const barOffset = groupIndex * (barWidth + offset);\r\n      const {\r\n        stackedData\r\n      } = series[seriesId];\r\n      return stackedData.map((values, dataIndex) => {\r\n        const valueCoordinates = values.map(v => verticalLayout ? yScale(v) : xScale(v));\r\n        const minValueCoord = Math.round(Math.min(...valueCoordinates));\r\n        const maxValueCoord = Math.round(Math.max(...valueCoordinates));\r\n        const stackId = series[seriesId].stack;\r\n        const result = {\r\n          seriesId,\r\n          dataIndex,\r\n          layout: series[seriesId].layout,\r\n          x: verticalLayout ? xScale(xAxis[xAxisId].data?.[dataIndex]) + barOffset : minValueCoord,\r\n          y: verticalLayout ? minValueCoord : yScale(yAxis[yAxisId].data?.[dataIndex]) + barOffset,\r\n          xOrigin: xScale(0),\r\n          yOrigin: yScale(0),\r\n          height: verticalLayout ? maxValueCoord - minValueCoord : barWidth,\r\n          width: verticalLayout ? barWidth : maxValueCoord - minValueCoord,\r\n          color: colorGetter(dataIndex),\r\n          value: series[seriesId].data[dataIndex],\r\n          maskId: `${chartId}_${stackId || seriesId}_${groupIndex}_${dataIndex}`\r\n        };\r\n        if (!masks[result.maskId]) {\r\n          masks[result.maskId] = {\r\n            id: result.maskId,\r\n            width: 0,\r\n            height: 0,\r\n            hasNegative: false,\r\n            hasPositive: false,\r\n            layout: result.layout,\r\n            xOrigin: xScale(0),\r\n            yOrigin: yScale(0),\r\n            x: 0,\r\n            y: 0\r\n          };\r\n        }\r\n        const mask = masks[result.maskId];\r\n        mask.width = result.layout === 'vertical' ? result.width : mask.width + result.width;\r\n        mask.height = result.layout === 'vertical' ? mask.height + result.height : result.height;\r\n        mask.x = Math.min(mask.x === 0 ? Infinity : mask.x, result.x);\r\n        mask.y = Math.min(mask.y === 0 ? Infinity : mask.y, result.y);\r\n        mask.hasNegative = mask.hasNegative || (result.value ?? 0) < 0;\r\n        mask.hasPositive = mask.hasPositive || (result.value ?? 0) > 0;\r\n        return result;\r\n      });\r\n    });\r\n  });\r\n  return {\r\n    completedData: data,\r\n    masksData: Object.values(masks)\r\n  };\r\n};\r\nconst leaveStyle = ({\r\n  layout,\r\n  yOrigin,\r\n  x,\r\n  width,\r\n  y,\r\n  xOrigin,\r\n  height\r\n}) => _extends({}, layout === 'vertical' ? {\r\n  y: yOrigin,\r\n  x,\r\n  height: 0,\r\n  width\r\n} : {\r\n  y,\r\n  x: xOrigin,\r\n  height,\r\n  width: 0\r\n});\r\nconst enterStyle = ({\r\n  x,\r\n  width,\r\n  y,\r\n  height\r\n}) => ({\r\n  y,\r\n  x,\r\n  height,\r\n  width\r\n});\r\n\r\n/**\r\n * Demos:\r\n *\r\n * - [Bars](https://mui.com/x/react-charts/bars/)\r\n * - [Bar demonstration](https://mui.com/x/react-charts/bar-demo/)\r\n * - [Stacking](https://mui.com/x/react-charts/stacking/)\r\n *\r\n * API:\r\n *\r\n * - [BarPlot API](https://mui.com/x/api/charts/bar-plot/)\r\n */\r\nfunction BarPlot(props) {\r\n  const {\r\n    completedData,\r\n    masksData\r\n  } = useAggregatedData();\r\n  const {\r\n      skipAnimation,\r\n      onItemClick,\r\n      borderRadius,\r\n      barLabel\r\n    } = props,\r\n    other = _objectWithoutPropertiesLoose(props, _excluded);\r\n  const withoutBorderRadius = !borderRadius || borderRadius <= 0;\r\n  const transition = useTransition(completedData, {\r\n    keys: bar => `${bar.seriesId}-${bar.dataIndex}`,\r\n    from: leaveStyle,\r\n    leave: leaveStyle,\r\n    enter: enterStyle,\r\n    update: enterStyle,\r\n    immediate: skipAnimation\r\n  });\r\n  const maskTransition = useTransition(withoutBorderRadius ? [] : masksData, {\r\n    keys: v => v.id,\r\n    from: leaveStyle,\r\n    leave: leaveStyle,\r\n    enter: enterStyle,\r\n    update: enterStyle,\r\n    immediate: skipAnimation\r\n  });\r\n  return /*#__PURE__*/_jsxs(React.Fragment, {\r\n    children: [!withoutBorderRadius && maskTransition((style, {\r\n      id,\r\n      hasPositive,\r\n      hasNegative,\r\n      layout\r\n    }) => {\r\n      return /*#__PURE__*/_jsx(BarClipPath, {\r\n        maskId: id,\r\n        borderRadius: borderRadius,\r\n        hasNegative: hasNegative,\r\n        hasPositive: hasPositive,\r\n        layout: layout,\r\n        style: style\r\n      });\r\n    }), transition((style, {\r\n      seriesId,\r\n      dataIndex,\r\n      color,\r\n      maskId\r\n    }) => {\r\n      const barElement = /*#__PURE__*/_jsx(BarElement, _extends({\r\n        id: seriesId,\r\n        dataIndex: dataIndex,\r\n        color: color\r\n      }, other, {\r\n        onClick: onItemClick && (event => {\r\n          onItemClick(event, {\r\n            type: 'bar',\r\n            seriesId,\r\n            dataIndex\r\n          });\r\n        }),\r\n        style: style\r\n      }));\r\n      if (withoutBorderRadius) {\r\n        return barElement;\r\n      }\r\n      return /*#__PURE__*/_jsx(\"g\", {\r\n        clipPath: `url(#${maskId})`,\r\n        children: barElement\r\n      });\r\n    }), barLabel && /*#__PURE__*/_jsx(BarLabelPlot, _extends({\r\n      bars: completedData,\r\n      skipAnimation: skipAnimation,\r\n      barLabel: barLabel\r\n    }, other))]\r\n  });\r\n}\r\nprocess.env.NODE_ENV !== \"production\" ? BarPlot.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\r\n  // ----------------------------------------------------------------------\r\n  /**\r\n   * If provided, the function will be used to format the label of the bar.\r\n   * It can be set to 'value' to display the current value.\r\n   * @param {BarItem} item The item to format.\r\n   * @param {BarLabelContext} context data about the bar.\r\n   * @returns {string} The formatted label.\r\n   */\r\n  barLabel: PropTypes.oneOfType([PropTypes.oneOf(['value']), PropTypes.func]),\r\n  /**\r\n   * Defines the border radius of the bar element.\r\n   */\r\n  borderRadius: PropTypes.number,\r\n  /**\r\n   * Callback fired when a bar item is clicked.\r\n   * @param {React.MouseEvent<SVGElement, MouseEvent>} event The event source of the callback.\r\n   * @param {BarItemIdentifier} barItemIdentifier The bar item identifier.\r\n   */\r\n  onItemClick: PropTypes.func,\r\n  /**\r\n   * If `true`, animations are skipped.\r\n   * @default false\r\n   */\r\n  skipAnimation: PropTypes.bool,\r\n  /**\r\n   * The props used for each component slot.\r\n   * @default {}\r\n   */\r\n  slotProps: PropTypes.object,\r\n  /**\r\n   * Overridable component slots.\r\n   * @default {}\r\n   */\r\n  slots: PropTypes.object\r\n} : void 0;\r\nexport { BarPlot };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nconst _excluded = [\"id\", \"dataIndex\", \"classes\", \"color\", \"slots\", \"slotProps\", \"style\", \"onClick\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport composeClasses from '@mui/utils/composeClasses';\r\nimport useSlotProps from '@mui/utils/useSlotProps';\r\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\r\nimport { styled } from '@mui/material/styles';\r\nimport generateUtilityClasses from '@mui/utils/generateUtilityClasses';\r\nimport { color as d3Color } from '@mui/x-charts-vendor/d3-color';\r\nimport { animated } from '@react-spring/web';\r\nimport { useInteractionItemProps } from '../hooks/useInteractionItemProps';\r\nimport { useItemHighlighted } from '../context';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport function getBarElementUtilityClass(slot) {\r\n  return generateUtilityClass('MuiBarElement', slot);\r\n}\r\nexport const barElementClasses = generateUtilityClasses('MuiBarElement', ['root']);\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    classes,\r\n    id\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root', `series-${id}`]\r\n  };\r\n  return composeClasses(slots, getBarElementUtilityClass, classes);\r\n};\r\nexport const BarElementPath = styled(animated.rect, {\r\n  name: 'MuiBarElement',\r\n  slot: 'Root',\r\n  overridesResolver: (_, styles) => styles.root\r\n})(({\r\n  ownerState\r\n}) => ({\r\n  stroke: 'none',\r\n  fill: ownerState.isHighlighted ? d3Color(ownerState.color).brighter(0.5).formatHex() : ownerState.color,\r\n  transition: 'opacity 0.2s ease-in, fill 0.2s ease-in',\r\n  opacity: ownerState.isFaded && 0.3 || 1\r\n}));\r\nfunction BarElement(props) {\r\n  const {\r\n      id,\r\n      dataIndex,\r\n      classes: innerClasses,\r\n      color,\r\n      slots,\r\n      slotProps,\r\n      style,\r\n      onClick\r\n    } = props,\r\n    other = _objectWithoutPropertiesLoose(props, _excluded);\r\n  const getInteractionItemProps = useInteractionItemProps();\r\n  const {\r\n    isFaded,\r\n    isHighlighted\r\n  } = useItemHighlighted({\r\n    seriesId: id,\r\n    dataIndex\r\n  });\r\n  const ownerState = {\r\n    id,\r\n    dataIndex,\r\n    classes: innerClasses,\r\n    color,\r\n    isFaded,\r\n    isHighlighted\r\n  };\r\n  const classes = useUtilityClasses(ownerState);\r\n  const Bar = slots?.bar ?? BarElementPath;\r\n  const barProps = useSlotProps({\r\n    elementType: Bar,\r\n    externalSlotProps: slotProps?.bar,\r\n    externalForwardedProps: other,\r\n    additionalProps: _extends({}, getInteractionItemProps({\r\n      type: 'bar',\r\n      seriesId: id,\r\n      dataIndex\r\n    }), {\r\n      style,\r\n      onClick,\r\n      cursor: onClick ? 'pointer' : 'unset'\r\n    }),\r\n    className: classes.root,\r\n    ownerState\r\n  });\r\n  return /*#__PURE__*/_jsx(Bar, _extends({}, barProps));\r\n}\r\nprocess.env.NODE_ENV !== \"production\" ? BarElement.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\r\n  // ----------------------------------------------------------------------\r\n  classes: PropTypes.object,\r\n  dataIndex: PropTypes.number.isRequired,\r\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\r\n  /**\r\n   * The props used for each component slot.\r\n   * @default {}\r\n   */\r\n  slotProps: PropTypes.object,\r\n  /**\r\n   * Overridable component slots.\r\n   * @default {}\r\n   */\r\n  slots: PropTypes.object\r\n} : void 0;\r\nexport { BarElement };", "import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nconst _excluded = [\"style\", \"maskId\"];\r\nimport * as React from 'react';\r\nimport { animated } from '@react-spring/web';\r\nimport { getRadius } from './getRadius';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst buildInset = corners => `inset(0px round ${corners.topLeft}px ${corners.topRight}px ${corners.bottomRight}px ${corners.bottomLeft}px)`;\r\nfunction BarClipRect(props) {\r\n  const radiusData = props.ownerState;\r\n  return /*#__PURE__*/_jsx(animated.rect, {\r\n    style: _extends({}, props.style, {\r\n      clipPath: (props.ownerState.layout === 'vertical' ? props.style?.height : props.style?.width).to(value => buildInset({\r\n        topLeft: Math.min(value, getRadius('top-left', radiusData)),\r\n        topRight: Math.min(value, getRadius('top-right', radiusData)),\r\n        bottomRight: Math.min(value, getRadius('bottom-right', radiusData)),\r\n        bottomLeft: Math.min(value, getRadius('bottom-left', radiusData))\r\n      }))\r\n    })\r\n  });\r\n}\r\n/**\r\n * @ignore - internal component.\r\n */\r\nfunction BarClipPath(props) {\r\n  const {\r\n      style,\r\n      maskId\r\n    } = props,\r\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\r\n  if (!props.borderRadius || props.borderRadius <= 0) {\r\n    return null;\r\n  }\r\n  return /*#__PURE__*/_jsx(\"clipPath\", {\r\n    id: maskId,\r\n    children: /*#__PURE__*/_jsx(BarClipRect, {\r\n      ownerState: rest,\r\n      style: style\r\n    })\r\n  });\r\n}\r\nexport { BarClipPath };", "/**\r\n * Returns if the corner should have a radius or not based on the layout and the data.\r\n * @param {GetRadiusCorner} corner The corner to check.\r\n * @param {GetRadiusData} cornerData The data for the corner.\r\n * @returns {number} The radius for the corner.\r\n */\r\nexport const getRadius = (corner, {\r\n  hasNegative,\r\n  hasPositive,\r\n  borderRadius,\r\n  layout\r\n}) => {\r\n  if (!borderRadius) {\r\n    return 0;\r\n  }\r\n  const isVertical = layout === 'vertical';\r\n  if (corner === 'top-left' && (isVertical && hasPositive || !isVertical && hasNegative)) {\r\n    return borderRadius;\r\n  }\r\n  if (corner === 'top-right' && (isVertical && hasPositive || !isVertical && hasPositive)) {\r\n    return borderRadius;\r\n  }\r\n  if (corner === 'bottom-right' && (isVertical && hasNegative || !isVertical && hasPositive)) {\r\n    return borderRadius;\r\n  }\r\n  if (corner === 'bottom-left' && (isVertical && hasNegative || !isVertical && hasNegative)) {\r\n    return borderRadius;\r\n  }\r\n  return 0;\r\n};", "import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nconst _excluded = [\"bars\", \"skipAnimation\"];\r\nimport * as React from 'react';\r\nimport { useTransition } from '@react-spring/web';\r\nimport { BarLabelItem } from './BarLabelItem';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst leaveStyle = ({\r\n  layout,\r\n  yOrigin,\r\n  x,\r\n  width,\r\n  y,\r\n  xOrigin,\r\n  height\r\n}) => _extends({}, layout === 'vertical' ? {\r\n  y: yOrigin,\r\n  x: x + width / 2,\r\n  height: 0,\r\n  width\r\n} : {\r\n  y: y + height / 2,\r\n  x: xOrigin,\r\n  height,\r\n  width: 0\r\n});\r\nconst enterStyle = ({\r\n  x,\r\n  width,\r\n  y,\r\n  height\r\n}) => ({\r\n  x: x + width / 2,\r\n  y: y + height / 2,\r\n  height,\r\n  width\r\n});\r\n/**\r\n * @ignore - internal component.\r\n */\r\nfunction BarLabelPlot(props) {\r\n  const {\r\n      bars,\r\n      skipAnimation\r\n    } = props,\r\n    other = _objectWithoutPropertiesLoose(props, _excluded);\r\n  const barLabelTransition = useTransition(bars, {\r\n    keys: bar => `${bar.seriesId}-${bar.dataIndex}`,\r\n    from: leaveStyle,\r\n    leave: null,\r\n    enter: enterStyle,\r\n    update: enterStyle,\r\n    immediate: skipAnimation\r\n  });\r\n  return /*#__PURE__*/_jsx(React.Fragment, {\r\n    children: barLabelTransition((style, {\r\n      seriesId,\r\n      dataIndex,\r\n      color,\r\n      value,\r\n      width,\r\n      height\r\n    }) => /*#__PURE__*/_jsx(BarLabelItem, _extends({\r\n      seriesId: seriesId,\r\n      dataIndex: dataIndex,\r\n      value: value,\r\n      color: color,\r\n      width: width,\r\n      height: height\r\n    }, other, {\r\n      style: style\r\n    })))\r\n  });\r\n}\r\nexport { BarLabelPlot };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nconst _excluded = [\"seriesId\", \"classes\", \"color\", \"style\", \"dataIndex\", \"barLabel\", \"slots\", \"slotProps\", \"height\", \"width\", \"value\"],\r\n  _excluded2 = [\"ownerState\"];\r\nimport * as React from 'react';\r\nimport useSlotProps from '@mui/utils/useSlotProps';\r\nimport PropTypes from 'prop-types';\r\nimport { useUtilityClasses } from './barLabelClasses';\r\nimport { getBarLabel } from './getBarLabel';\r\nimport { BarLabel } from './BarLabel';\r\nimport { useItemHighlighted } from '../../context';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\n/**\r\n * @ignore - internal component.\r\n */\r\nfunction BarLabelItem(props) {\r\n  const {\r\n      seriesId,\r\n      classes: innerClasses,\r\n      color,\r\n      style,\r\n      dataIndex,\r\n      barLabel,\r\n      slots,\r\n      slotProps,\r\n      height,\r\n      width,\r\n      value\r\n    } = props,\r\n    other = _objectWithoutPropertiesLoose(props, _excluded);\r\n  const {\r\n    isFaded,\r\n    isHighlighted\r\n  } = useItemHighlighted({\r\n    seriesId,\r\n    dataIndex\r\n  });\r\n  const ownerState = {\r\n    seriesId,\r\n    classes: innerClasses,\r\n    color,\r\n    isFaded,\r\n    isHighlighted,\r\n    dataIndex\r\n  };\r\n  const classes = useUtilityClasses(ownerState);\r\n  const Component = slots?.barLabel ?? BarLabel;\r\n  const _useSlotProps = useSlotProps({\r\n      elementType: Component,\r\n      externalSlotProps: slotProps?.barLabel,\r\n      additionalProps: _extends({}, other, {\r\n        style,\r\n        className: classes.root\r\n      }),\r\n      ownerState\r\n    }),\r\n    {\r\n      ownerState: barLabelOwnerState\r\n    } = _useSlotProps,\r\n    barLabelProps = _objectWithoutPropertiesLoose(_useSlotProps, _excluded2);\r\n  if (!barLabel) {\r\n    return null;\r\n  }\r\n  const formattedLabelText = getBarLabel({\r\n    barLabel,\r\n    value,\r\n    dataIndex,\r\n    seriesId,\r\n    height,\r\n    width\r\n  });\r\n  if (!formattedLabelText) {\r\n    return null;\r\n  }\r\n  return /*#__PURE__*/_jsx(Component, _extends({}, barLabelProps, barLabelOwnerState, {\r\n    children: formattedLabelText\r\n  }));\r\n}\r\nprocess.env.NODE_ENV !== \"production\" ? BarLabelItem.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\r\n  // ----------------------------------------------------------------------\r\n  /**\r\n   * If provided, the function will be used to format the label of the bar.\r\n   * It can be set to 'value' to display the current value.\r\n   * @param {BarItem} item The item to format.\r\n   * @param {BarLabelContext} context data about the bar.\r\n   * @returns {string} The formatted label.\r\n   */\r\n  barLabel: PropTypes.oneOfType([PropTypes.oneOf(['value']), PropTypes.func]),\r\n  classes: PropTypes.object,\r\n  color: PropTypes.string.isRequired,\r\n  dataIndex: PropTypes.number.isRequired,\r\n  /**\r\n   * The height of the bar.\r\n   */\r\n  height: PropTypes.number.isRequired,\r\n  seriesId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\r\n  /**\r\n   * The props used for each component slot.\r\n   * @default {}\r\n   */\r\n  slotProps: PropTypes.object,\r\n  /**\r\n   * Overridable component slots.\r\n   * @default {}\r\n   */\r\n  slots: PropTypes.object,\r\n  /**\r\n   * The value of the data point.\r\n   */\r\n  value: PropTypes.number,\r\n  /**\r\n   * The width of the bar.\r\n   */\r\n  width: PropTypes.number.isRequired\r\n} : void 0;\r\nexport { BarLabelItem };", "import generateUtilityClass from '@mui/utils/generateUtilityClass';\r\nimport generateUtilityClasses from '@mui/utils/generateUtilityClasses';\r\nimport composeClasses from '@mui/utils/composeClasses';\r\nexport function getBarLabelUtilityClass(slot) {\r\n  return generateUtilityClass('MuiBarLabel', slot);\r\n}\r\nexport const barLabelClasses = generateUtilityClasses('MuiBarLabel', ['root', 'highlighted', 'faded']);\r\nexport const useUtilityClasses = ownerState => {\r\n  const {\r\n    classes,\r\n    seriesId,\r\n    isFaded,\r\n    isHighlighted\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root', `series-${seriesId}`, isHighlighted && 'highlighted', isFaded && 'faded']\r\n  };\r\n  return composeClasses(slots, getBarLabelUtilityClass, classes);\r\n};", "export const getBarLabel = options => {\r\n  const {\r\n    barLabel,\r\n    value,\r\n    dataIndex,\r\n    seriesId,\r\n    height,\r\n    width\r\n  } = options;\r\n  if (barLabel === 'value') {\r\n    // We don't want to show the label if the value is 0\r\n    return value ? value?.toString() : null;\r\n  }\r\n  return barLabel({\r\n    seriesId,\r\n    dataIndex,\r\n    value\r\n  }, {\r\n    bar: {\r\n      height,\r\n      width\r\n    }\r\n  });\r\n};", "import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nconst _excluded = [\"seriesId\", \"dataIndex\", \"color\", \"isFaded\", \"isHighlighted\", \"classes\"];\r\nimport * as React from 'react';\r\nimport { styled, useThemeProps } from '@mui/material/styles';\r\nimport { animated } from '@react-spring/web';\r\nimport PropTypes from 'prop-types';\r\nimport { barLabelClasses } from './barLabelClasses';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport const BarLabelComponent = styled(animated.text, {\r\n  name: 'MuiBarLabel',\r\n  slot: 'Root',\r\n  overridesResolver: (_, styles) => [{\r\n    [`&.${barLabelClasses.faded}`]: styles.faded\r\n  }, {\r\n    [`&.${barLabelClasses.highlighted}`]: styles.highlighted\r\n  }, styles.root]\r\n})(({\r\n  theme\r\n}) => _extends({}, theme?.typography?.body2, {\r\n  stroke: 'none',\r\n  fill: (theme.vars || theme)?.palette?.text?.primary,\r\n  transition: 'opacity 0.2s ease-in, fill 0.2s ease-in',\r\n  textAnchor: 'middle',\r\n  dominantBaseline: 'central',\r\n  pointerEvents: 'none',\r\n  opacity: 1,\r\n  [`&.${barLabelClasses.faded}`]: {\r\n    opacity: 0.3\r\n  }\r\n}));\r\nfunction BarLabel(inProps) {\r\n  const props = useThemeProps({\r\n    props: inProps,\r\n    name: 'MuiBarLabel'\r\n  });\r\n  const otherProps = _objectWithoutPropertiesLoose(props, _excluded);\r\n  return /*#__PURE__*/_jsx(BarLabelComponent, _extends({}, otherProps));\r\n}\r\nprocess.env.NODE_ENV !== \"production\" ? BarLabel.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\r\n  // ----------------------------------------------------------------------\r\n  classes: PropTypes.object,\r\n  dataIndex: PropTypes.number.isRequired,\r\n  isFaded: PropTypes.bool.isRequired,\r\n  isHighlighted: PropTypes.bool.isRequired,\r\n  seriesId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired\r\n} : void 0;\r\nexport { BarLabel };", "import { DEFAULT_X_AXIS_KEY, DEFAULT_Y_AXIS_KEY } from '../constants';\r\nimport { isBandScaleConfig, isPointScaleConfig } from '../models/axis';\r\nconst getAxisMessage = (axisDirection, axisId) => {\r\n  const axisName = `${axisDirection}-axis`;\r\n  const axisIdName = `${axisDirection}Axis`;\r\n  const axisDefaultKey = axisDirection === 'x' ? DEFAULT_X_AXIS_KEY : DEFAULT_Y_AXIS_KEY;\r\n  return axisId === axisDefaultKey ? `The first \\`${axisIdName}\\`` : `The ${axisName} with id \"${axisId}\"`;\r\n};\r\nexport function checkScaleErrors(verticalLayout, seriesId, xAxisId, xAxis, yAxisId, yAxis) {\r\n  const xAxisConfig = xAxis[xAxisId];\r\n  const yAxisConfig = yAxis[yAxisId];\r\n  const discreteAxisConfig = verticalLayout ? xAxisConfig : yAxisConfig;\r\n  const continuousAxisConfig = verticalLayout ? yAxisConfig : xAxisConfig;\r\n  const discreteAxisId = verticalLayout ? xAxisId : yAxisId;\r\n  const continuousAxisId = verticalLayout ? yAxisId : xAxisId;\r\n  const discreteAxisDirection = verticalLayout ? 'x' : 'y';\r\n  const continuousAxisDirection = verticalLayout ? 'y' : 'x';\r\n  if (!isBandScaleConfig(discreteAxisConfig)) {\r\n    throw new Error(`MUI X: ${getAxisMessage(discreteAxisDirection, discreteAxisId)} should be of type \"band\" to display the bar series of id \"${seriesId}\".`);\r\n  }\r\n  if (discreteAxisConfig.data === undefined) {\r\n    throw new Error(`MUI X: ${getAxisMessage(discreteAxisDirection, discreteAxisId)} should have data property.`);\r\n  }\r\n  if (isBandScaleConfig(continuousAxisConfig) || isPointScaleConfig(continuousAxisConfig)) {\r\n    throw new Error(`MUI X: ${getAxisMessage(continuousAxisDirection, continuousAxisId)} should be a continuous type to display the bar series of id \"${seriesId}\".`);\r\n  }\r\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nconst _excluded = [\"xAxis\", \"yAxis\", \"series\", \"width\", \"height\", \"margin\", \"colors\", \"dataset\", \"sx\", \"tooltip\", \"onAxisClick\", \"axisHighlight\", \"legend\", \"grid\", \"topAxis\", \"leftAxis\", \"rightAxis\", \"bottomAxis\", \"children\", \"slots\", \"slotProps\", \"skipAnimation\", \"loading\", \"layout\", \"onItemClick\", \"highlightedItem\", \"onHighlightChange\", \"borderRadius\", \"barLabel\", \"className\"];\r\nimport useId from '@mui/utils/useId';\r\nimport { DEFAULT_X_AXIS_KEY, DEFAULT_Y_AXIS_KEY } from '../constants';\r\n/**\r\n * A helper function that extracts BarChartProps from the input props\r\n * and returns an object with props for the children components of BarChart.\r\n *\r\n * @param props The input props for BarChart\r\n * @returns An object with props for the children components of BarChart\r\n */\r\nexport const useBarChartProps = props => {\r\n  const {\r\n      xAxis,\r\n      yAxis,\r\n      series,\r\n      width,\r\n      height,\r\n      margin,\r\n      colors,\r\n      dataset,\r\n      sx,\r\n      tooltip,\r\n      onAxisClick,\r\n      axisHighlight,\r\n      legend,\r\n      grid,\r\n      topAxis,\r\n      leftAxis,\r\n      rightAxis,\r\n      bottomAxis,\r\n      children,\r\n      slots,\r\n      slotProps,\r\n      skipAnimation,\r\n      loading,\r\n      layout,\r\n      onItemClick,\r\n      highlightedItem,\r\n      onHighlightChange,\r\n      borderRadius,\r\n      barLabel,\r\n      className\r\n    } = props,\r\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\r\n  const id = useId();\r\n  const clipPathId = `${id}-clip-path`;\r\n  const hasHorizontalSeries = layout === 'horizontal' || layout === undefined && series.some(item => item.layout === 'horizontal');\r\n  const defaultAxisConfig = {\r\n    scaleType: 'band',\r\n    data: Array.from({\r\n      length: Math.max(...series.map(s => (s.data ?? dataset ?? []).length))\r\n    }, (_, index) => index)\r\n  };\r\n  const chartContainerProps = _extends({}, rest, {\r\n    series: series.map(s => _extends({\r\n      type: 'bar'\r\n    }, s, {\r\n      layout: hasHorizontalSeries ? 'horizontal' : 'vertical'\r\n    })),\r\n    width,\r\n    height,\r\n    margin,\r\n    colors,\r\n    dataset,\r\n    xAxis: xAxis ?? (hasHorizontalSeries ? undefined : [_extends({\r\n      id: DEFAULT_X_AXIS_KEY\r\n    }, defaultAxisConfig)]),\r\n    yAxis: yAxis ?? (hasHorizontalSeries ? [_extends({\r\n      id: DEFAULT_Y_AXIS_KEY\r\n    }, defaultAxisConfig)] : undefined),\r\n    sx,\r\n    highlightedItem,\r\n    onHighlightChange,\r\n    disableAxisListener: tooltip?.trigger !== 'axis' && axisHighlight?.x === 'none' && axisHighlight?.y === 'none' && !onAxisClick,\r\n    className\r\n  });\r\n  const barPlotProps = {\r\n    onItemClick,\r\n    slots,\r\n    slotProps,\r\n    skipAnimation,\r\n    borderRadius,\r\n    barLabel\r\n  };\r\n  const axisClickHandlerProps = {\r\n    onAxisClick\r\n  };\r\n  const gridProps = {\r\n    vertical: grid?.vertical,\r\n    horizontal: grid?.horizontal\r\n  };\r\n  const clipPathGroupProps = {\r\n    clipPath: `url(#${clipPathId})`\r\n  };\r\n  const clipPathProps = {\r\n    id: clipPathId\r\n  };\r\n  const overlayProps = {\r\n    slots,\r\n    slotProps,\r\n    loading\r\n  };\r\n  const chartsAxisProps = {\r\n    topAxis,\r\n    leftAxis,\r\n    rightAxis,\r\n    bottomAxis,\r\n    slots,\r\n    slotProps\r\n  };\r\n  const axisHighlightProps = _extends({}, hasHorizontalSeries ? {\r\n    y: 'band'\r\n  } : {\r\n    x: 'band'\r\n  }, axisHighlight);\r\n  const legendProps = _extends({}, legend, {\r\n    slots,\r\n    slotProps\r\n  });\r\n  const tooltipProps = _extends({}, tooltip, {\r\n    slots,\r\n    slotProps\r\n  });\r\n  return {\r\n    chartContainerProps,\r\n    barPlotProps,\r\n    axisClickHandlerProps,\r\n    gridProps,\r\n    clipPathProps,\r\n    clipPathGroupProps,\r\n    overlayProps,\r\n    chartsAxisProps,\r\n    axisHighlightProps,\r\n    legendProps,\r\n    tooltipProps,\r\n    children\r\n  };\r\n};"],
  "mappings": "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",
  "names": ["React", "import_prop_types", "React", "import_prop_types", "color", "_jsx", "PropTypes", "React", "import_jsx_runtime", "_excluded", "_jsx", "React", "React", "import_prop_types", "useUtilityClasses", "React", "import_prop_types", "import_jsx_runtime", "_excluded", "_jsx", "PropTypes", "import_jsx_runtime", "_excluded", "_excluded2", "color", "useUtilityClasses", "_jsx", "PropTypes", "import_jsx_runtime", "_excluded", "_jsx", "color", "import_jsx_runtime", "_excluded", "leaveStyle", "enterStyle", "_jsxs", "_jsx", "color", "PropTypes", "_excluded", "import_jsx_runtime", "BarChart", "_jsxs", "_jsx", "PropTypes"]
}
